'''
Institution: Max-Planck Institution for Radioastronomy (MPIfR-Bonn)
    Auf dem Huegel 69, Bonn, Germany

Author: Niclas Eesser <nesser@mpifr-bonn.mpg.de>

Description
-----------
    This script reads ACM data stored by numpy.savetxt() and plots them.
    The input file(s) must be .txt files generated by numpy.savetxt().
Program flow
------------
    0. Parse user arguments
    1. Load ACM data from file
    2. Plot and optionally store results
'''
# Included modules
import argparse
import glob
import numpy as np
from argparse import RawTextHelpFormatter

# Custom modules
from inc.codif import *
from inc.utils import *


if __name__ == '__main__':
    ##############################
    # Start of arguments parsing #
    ##############################
    parser = argparse.ArgumentParser(description='options', formatter_class=RawTextHelpFormatter)
    parser.add_argument('--dir', '-d', action = "store", default = "/beegfsEDD/NESSER/PAF-12-2020/2020-12-09/2020-12-09-15:57:51/", dest = "dir", help = "Input file name with directory (filetype '.dada')")
    parser.add_argument('--output_dir', '-o', action = "store", default="", dest="odir")
    parser.add_argument('--numa_id', '-i', action = "store", dest="id")
    parser.add_argument('--freq', '-f', action = "store", default=1284, dest="sfreq")
    # Assign arguments to variables for readability
    dir = check_slash(parser.parse_args().dir)
    odir = check_slash(parser.parse_args().odir)
    id = int(parser.parse_args().id)
    sfreq = int(parser.parse_args().sfreq)

    if "numa" not in dir:
        dir += "numa" + str(id) + "/"
    files = get_file_list(dir)

    if odir != "":
        check_dir(odir)
    ##############################
    #  End of arguments parsing  #
    ##############################

    acm = np.zeros((7,72,72),dtype="complex")
    freq = np.arange(sfreq, sfreq+7)

    for fidx, f in enumerate(files):
        acm[fidx] = np.loadtxt(f,dtype="complex")
    plot_acm(acm, freq, dir=odir)
